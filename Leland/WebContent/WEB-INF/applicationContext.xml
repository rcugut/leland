<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:p="http://www.springframework.org/schema/p"
		xmlns:aop="http://www.springframework.org/schema/aop"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:jee="http://www.springframework.org/schema/jee"
		xmlns:tx="http://www.springframework.org/schema/tx"
		xsi:schemaLocation="
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">


	<!-- Configurer that replaces ${...} placeholders with values from a properties file -->
	<context:property-placeholder location="WEB-INF/jdbc.properties"/>

	<!-- Apache DBCP DataSource -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
		
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.generate_statistics">false</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.default_schema">${database.schema}</prop>
				<prop key="hibernate.use_sql_comments">true</prop>
				<prop key="hibernate.format_sql">true</prop>
			</props>
		</property>

		<property name="annotatedClasses">
			<list>
				<value>leland.domain.billing.ClientInvoice</value>
				<value>leland.domain.billing.ClientInvoiceRow</value>
				<value>leland.domain.billing.ClientPayment</value>
				<value>leland.domain.networking.Location</value>
				<value>leland.domain.networking.NetworkAddress</value>
				<value>leland.domain.networking.BandwidthAllocation</value>
				<value>leland.domain.Address</value>
				<value>leland.domain.Client</value>
				<value>leland.domain.ContactPerson</value>
				<value>leland.domain.ContractChange</value>
				<value>leland.domain.ContractDocument</value>
				<value>leland.domain.ContractGenericService</value>
				<value>leland.domain.ContractInternetService</value>
				<value>leland.domain.ContractConnectionService</value>
			</list>
		</property>
	</bean>


	<!-- Transaction manager -->
	<bean id="hibernateTransactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>


	<bean id="baseTransactionProxy" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean" abstract="true">
		<property name="transactionManager" ref="hibernateTransactionManager" />
		<property name="transactionAttributes">
			<props>
				<prop key="persist*">PROPAGATION_REQUIRED</prop>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="flush*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>


	<bean id="baseDaoTarget" class="leland.dao.BaseDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="baseDao" parent="baseTransactionProxy">
		<property name="target" ref="baseDaoTarget" />
	</bean>


	<bean id="billingDaoTarget" class="leland.dao.BillingDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="billingDao" parent="baseTransactionProxy">
		<property name="target" ref="billingDaoTarget" />
	</bean>





	<bean id="clientManager" class="leland.dao.ClientManager">
		<property name="dao" ref="baseDao" />
	</bean>
	
	<bean id="billingManager" class="leland.dao.BillingManager">
		<property name="dao" ref="billingDao" />
	</bean>




	<!-- setup wicket application -->
	<bean id="wicketApplication" class="leland.web.wicket.LelandWicketApplication">
	</bean>





	<bean id="billingEngine" class="leland.core.BillingEngine">
		<constructor-arg ref="clientManager" />
	</bean>

	<!--  Cron Tasks -->
<!-- 	
	<bean id="scheduledTask" class="org.springframework.scheduling.timer.ScheduledTimerTask">
		<property name="delay" value="10000" />
    	<property name="period" value="0" />
		<property name="timerTask" ref="monthlyBillingTask" />	
	</bean>
 -->
</beans>